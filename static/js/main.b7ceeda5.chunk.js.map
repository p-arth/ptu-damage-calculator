{"version":3,"sources":["App.jsx","reportWebVitals.js","index.js"],"names":["App","useState","baseValue","setBaseValue","suggestion","setSuggestion","roll","setRoll","damageValue","setDamageValue","statsValue","setStatsValue","enemyStatsValue","setEnemyStatsValue","STABValue","setSTABValue","critValue","setCritValue","lastChanceValue","setLastChanceValue","critLastChanceValue","setCritLastChanceValue","semiTotal","setSemiTotal","finalTotal","setFinalTotal","effectiveValue","setEffectiveValue","doubleEffectiveValue","setDoubleEffectiveValue","notEffectiveValue","setNotEffectiveValue","doubleNotEffectiveValue","setDoubleNotEffectiveValue","damageBaseArray","Array","from","length","_","i","handleDamageChange","event","target","value","parseInt","getSuggestion","suggestionValue","className","alt","src","onChange","rightValue","map","name","type","checked","onClick","total","lastTotal","damage","stats","enemyStats","Math","floor","damageCalculator","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7ceeda5.chunk.js","sourcesContent":["import \"./styles.css\";\nimport React, { useState } from \"react\";\n\nexport default function App() {\n  const [baseValue, setBaseValue] = useState(1);\n  const [suggestion, setSuggestion] = useState(5);\n  const [roll, setRoll] = useState(\"1d6+1\");\n  const [damageValue, setDamageValue] = useState(5);\n  const [statsValue, setStatsValue] = useState(\"\");\n  const [enemyStatsValue, setEnemyStatsValue] = useState(\"\");\n  const [STABValue, setSTABValue] = useState(false);\n  const [critValue, setCritValue] = useState(false);\n  const [lastChanceValue, setLastChanceValue] = useState(false);\n  const [critLastChanceValue, setCritLastChanceValue] = useState(false);\n  const [semiTotal, setSemiTotal] = useState(\"\");\n  const [finalTotal, setFinalTotal] = useState(\"\");\n  const [effectiveValue, setEffectiveValue] = useState(false);\n  const [doubleEffectiveValue, setDoubleEffectiveValue] = useState(false);\n  const [notEffectiveValue, setNotEffectiveValue] = useState(false);\n  const [doubleNotEffectiveValue, setDoubleNotEffectiveValue] = useState(false);\n\n  const damageBaseArray = Array.from({ length: 28 }, (_, i) => i + 1);\n\n  const handleBaseChange = (event) => {\n    let rightValue = event.target.value;\n    setBaseValue(parseInt(rightValue, 10));\n    getSuggestion(parseInt(rightValue, 10));\n    handleDamageChange({ target: { value: \"\" } });\n    setSTABValue(false);\n    setCritValue(false);\n    setLastChanceValue(false);\n  };\n\n  const handleDamageChange = (event) => {\n    switch (event.target.value) {\n      case 0:\n        setDamageValue(\"0\");\n        return null;\n      case \"0\":\n        setDamageValue(\"0\");\n        return null;\n      case null:\n        setDamageValue(suggestion);\n        return null;\n      default:\n        setDamageValue(parseInt(event.target.value, 10));\n        return null;\n    }\n  };\n\n  const handleSTABChange = (event) => {\n    setSTABValue(!STABValue);\n    !STABValue ? getSuggestion(baseValue + 2) : getSuggestion(baseValue);\n  };\n\n  const handleCritChange = (event) => {\n    setCritValue(!critValue);\n  };\n\n  const handleLastChanceChange = (event) => {\n    setLastChanceValue(!lastChanceValue);\n    setCritLastChanceValue(false);\n  };\n\n  const handleCritLastChanceChange = (event) => {\n    setCritLastChanceValue(!critLastChanceValue);\n    setLastChanceValue(false);\n  };\n\n  const handleStatsChange = (event) => {\n    if (event.target.value === null) {\n      setStatsValue(0);\n    } else {\n      setStatsValue(parseInt(event.target.value, 10));\n    }\n  };\n\n  const handleEnemyStatsChange = (event) => {\n    if (event.target.value === null) {\n      setEnemyStatsValue(0);\n    } else {\n      setEnemyStatsValue(parseInt(event.target.value, 10));\n    }\n  };\n\n  const handleEffectiveChange = (event) => {\n    setEffectiveValue(!effectiveValue);\n    setDoubleEffectiveValue(false);\n    setNotEffectiveValue(false);\n    setDoubleNotEffectiveValue(false);\n  };\n\n  const handleDoubleEffectiveChange = (event) => {\n    setDoubleEffectiveValue(!doubleEffectiveValue);\n    setEffectiveValue(false);\n    setNotEffectiveValue(false);\n    setDoubleNotEffectiveValue(false);\n  };\n\n  const handleNotEffectiveChange = (event) => {\n    setNotEffectiveValue(!notEffectiveValue);\n    setDoubleNotEffectiveValue(false);\n    setDoubleEffectiveValue(false);\n    setEffectiveValue(false);\n  };\n\n  const handleDoubleNotEffectiveChange = (event) => {\n    setDoubleNotEffectiveValue(!doubleNotEffectiveValue);\n    setNotEffectiveValue(false);\n    setDoubleEffectiveValue(false);\n    setEffectiveValue(false);\n  };\n\n  const getSuggestion = (suggestionValue) => {\n    switch (suggestionValue) {\n      case 1:\n        setSuggestion(5);\n        setRoll(\"1d6+1\");\n        return null;\n      case 2:\n        setSuggestion(7);\n        setRoll(\"1d6+3\");\n        return null;\n      case 3:\n        setSuggestion(9);\n        setRoll(\"1d6+5\");\n        return null;\n      case 4:\n        setSuggestion(11);\n        setRoll(\"1d8+6\");\n        return null;\n      case 5:\n        setSuggestion(13);\n        setRoll(\"1d8+8\");\n        return null;\n      case 6:\n        setSuggestion(15);\n        setRoll(\"2d6+8\");\n        return null;\n      case 7:\n        setSuggestion(17);\n        setRoll(\"2d6+10\");\n        return null;\n      case 8:\n        setSuggestion(19);\n        setRoll(\"2d8+10\");\n        return null;\n      case 9:\n        setSuggestion(21);\n        setRoll(\"2d10+10\");\n        return null;\n      case 10:\n        setSuggestion(24);\n        setRoll(\"3d8+10\");\n        return null;\n      case 11:\n        setSuggestion(27);\n        setRoll(\"3d10+10\");\n        return null;\n      case 12:\n        setSuggestion(30);\n        setRoll(\"3d12+10\");\n        return null;\n      case 13:\n        setSuggestion(35);\n        setRoll(\"4d10+10\");\n        return null;\n      case 14:\n        setSuggestion(40);\n        setRoll(\"4d10+15\");\n        return null;\n      case 15:\n        setSuggestion(45);\n        setRoll(\"4d10+20\");\n        return null;\n      case 16:\n        setSuggestion(50);\n        setRoll(\"5d10+20\");\n        return null;\n      case 17:\n        setSuggestion(60);\n        setRoll(\"5d12+25\");\n        return null;\n      case 18:\n        setSuggestion(65);\n        setRoll(\"6d12+25\");\n        return null;\n      case 19:\n        setSuggestion(70);\n        setRoll(\"6d12+30\");\n        return null;\n      case 20:\n        setSuggestion(75);\n        setRoll(\"6d12+35\");\n        return null;\n      case 21:\n        setSuggestion(80);\n        setRoll(\"6d12+40\");\n        return null;\n      case 22:\n        setSuggestion(85);\n        setRoll(\"6d12+45\");\n        return null;\n      case 23:\n        setSuggestion(90);\n        setRoll(\"6d12+50\");\n        return null;\n      case 24:\n        setSuggestion(95);\n        setRoll(\"6d12+55\");\n        return null;\n      case 25:\n        setSuggestion(100);\n        setRoll(\"6d12+60\");\n        return null;\n      case 26:\n        setSuggestion(110);\n        setRoll(\"7d12+65\");\n        return null;\n      case 27:\n        setSuggestion(120);\n        setRoll(\"8d12+70\");\n        return null;\n      case 28:\n        setSuggestion(130);\n        setRoll(\"8d12+80\");\n        return null;\n      default:\n        setSuggestion(5);\n        setRoll(\"1d6+1\");\n        return null;\n    }\n  };\n\n  const damageCalculator = () => {\n    let total = 0;\n    let lastTotal = 0;\n    let damage = parseInt(damageValue ? damageValue : suggestion, 10);\n    let stats = parseInt(statsValue ? statsValue : 0, 10);\n    let enemyStats = parseInt(enemyStatsValue ? enemyStatsValue : 0, 10);\n\n    if (critValue === true && lastChanceValue === true) {\n      total = damage * 2 + 5 + stats;\n    } else if (critValue === true && critLastChanceValue === true) {\n      total = damage * 2 + 10 + stats;\n    } else if (critValue === true) {\n      total = damage * 2 + stats;\n    } else if (lastChanceValue === true) {\n      total = damage + 5 + stats;\n    } else if (critLastChanceValue === true) {\n      total = damage + 10 + stats;\n    } else {\n      total = damage + stats;\n    }\n\n    setSemiTotal(total);\n\n    if (total - enemyStats <= 0) {\n      lastTotal = 1;\n    } else {\n      lastTotal = total - enemyStats;\n    }\n\n    if (effectiveValue === true) {\n      setFinalTotal(Math.floor(lastTotal * 1.5));\n    } else if (doubleEffectiveValue === true) {\n      setFinalTotal(Math.floor(lastTotal * 2));\n    } else if (notEffectiveValue === true) {\n      setFinalTotal(Math.floor(lastTotal * 0.5));\n    } else if (doubleNotEffectiveValue === true) {\n      setFinalTotal(Math.floor(lastTotal * 0.25));\n    } else {\n      setFinalTotal(Math.floor(lastTotal));\n    }\n  };\n\n  return (\n    <>\n      <div className=\"App\">\n        <h1>Pokémon Tabletop United Damage Calculator</h1>\n        <img\n          className=\"pokeball\"\n          alt=\"pokeball\"\n          src=\"https://image.flaticon.com/icons/png/512/188/188918.png\"\n        />\n        <div className=\"presentation-text\">\n          <h2>Increase your combat pacing while playing PTU</h2>\n          <img\n            className=\"pikachu\"\n            alt=\"pikachu-running\"\n            src=\"http://4.bp.blogspot.com/-0Fa05X2tat4/U_H9IY9gU4I/AAAAAAAAKpo/QZWJhZWuAps/s1600/Pikachu%2B15.gif\"\n          />\n        </div>\n      </div>\n      <div className=\"App\">\n        <form className=\"form-app\">\n          <label className=\"form-app_label\">Base Damage</label>\n          <select onChange={handleBaseChange}>\n            {damageBaseArray.map((baseValue) => {\n              return (\n                <option value={baseValue} key={baseValue}>\n                  {baseValue}\n                </option>\n              );\n            })}\n          </select>\n\n          <label className=\"form-app_label-click\">\n            STAB\n            <input\n              name=\"STAB\"\n              type=\"checkbox\"\n              checked={STABValue}\n              onChange={handleSTABChange}\n            />\n          </label>\n\n          <label className=\"form-app_label-click\">\n            Last Chance (Overgrow, Torrent, etc)\n            <input\n              name=\"Last Chance\"\n              type=\"checkbox\"\n              checked={lastChanceValue}\n              onChange={handleLastChanceChange}\n            />\n          </label>\n\n          <label className=\"form-app_label-click\">\n            -1/3 HP Last Chance (Overgrow, Torrent, etc)\n            <input\n              name=\"Crit Last Chance\"\n              type=\"checkbox\"\n              checked={critLastChanceValue}\n              onChange={handleCritLastChanceChange}\n            />\n          </label>\n\n          <label className=\"form-app_label-click\">\n            Critical Hit\n            <input\n              name=\"Crit\"\n              type=\"checkbox\"\n              checked={critValue}\n              onChange={handleCritChange}\n            />\n          </label>\n\n          <label className=\"form-app_label\">Set/Roll Damage</label>\n          <div className=\"form-app_set-damage\">\n            <div className=\"form-app_set-damage_title\">Set Value:</div>\n            <div className=\"form-app_set-damage_value\">{suggestion}</div>\n          </div>\n          <div className=\"form-app_set-damage\">\n            <div className=\"form-app_set-damage_title\">Roll:</div>\n            <div className=\"form-app_set-roll\">{roll}</div>\n          </div>\n          <input\n            type=\"text\"\n            value={damageValue ? damageValue : suggestion}\n            onChange={handleDamageChange}\n            className=\"form-app_text-input\"\n          />\n\n          <label className=\"form-app_label\">Your Stats</label>\n          <div className=\"form-app_set-damage\">\n            <div className=\"form-app_set-damage_title\">Attack / Sp. Attack</div>\n          </div>\n          <input\n            type=\"text\"\n            value={statsValue ? statsValue : 0}\n            onChange={handleStatsChange}\n            className=\"form-app_text-input\"\n          />\n\n          <label className=\"form-app_label\">Enemy Stats</label>\n          <div className=\"form-app_set-damage\">\n            <div className=\"form-app_set-damage_title\">\n              Defense / Sp. Defense\n            </div>\n          </div>\n          <input\n            type=\"text\"\n            value={enemyStatsValue ? enemyStatsValue : 0}\n            onChange={handleEnemyStatsChange}\n            className=\"form-app_text-input\"\n          />\n\n          <label className=\"effective-box\">\n            <label className=\"form-app_label-click\">\n              Very Effective\n              <input\n                name=\"Very Effective\"\n                type=\"checkbox\"\n                checked={effectiveValue}\n                onChange={handleEffectiveChange}\n              />\n            </label>\n\n            <label className=\"form-app_label-click\">\n              x2 Very Effective\n              <input\n                name=\"Double Very Effective\"\n                type=\"checkbox\"\n                checked={doubleEffectiveValue}\n                onChange={handleDoubleEffectiveChange}\n              />\n            </label>\n          </label>\n\n          <label className=\"effective-box\">\n            <label className=\"form-app_label-click\">\n              Not Effective\n              <input\n                name=\"Very Effective\"\n                type=\"checkbox\"\n                checked={notEffectiveValue}\n                onChange={handleNotEffectiveChange}\n              />\n            </label>\n\n            <label className=\"form-app_label-click\">\n              x2 Not Effective\n              <input\n                name=\"Double Very Effective\"\n                type=\"checkbox\"\n                checked={doubleNotEffectiveValue}\n                onChange={handleDoubleNotEffectiveChange}\n              />\n            </label>\n          </label>\n\n          <input\n            type=\"button\"\n            className=\"form-app_submit\"\n            value=\"Calculate\"\n            onClick={() => damageCalculator()}\n          />\n\n          <label className=\"form-app_label-final\">Raw Damage</label>\n          <div className=\"form-app_set-final_value\">{semiTotal}</div>\n          <label className=\"form-app_label-final\">Done Damage</label>\n          <div className=\"form-app_set-final_value\">{finalTotal}</div>\n          <div className=\"modifiers\"></div>\n        </form>\n      </div>\n    </>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}